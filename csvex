import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFColor;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.ss.util.CellRangeAddress;

import java.awt.Color;
import java.io.FileOutputStream;
import java.io.IOException;

public class ExcelStylingExample {

    public static void main(String[] args) throws IOException {

        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Styled Sheet");

        // Create row and cell
        Row row0 = sheet.createRow(0);
        Row row1 = sheet.createRow(1);

        // Define the styles for headers
        XSSFCellStyle greenStyle = createHeaderStyle(workbook, Color.GREEN);
        XSSFCellStyle pinkStyle = createHeaderStyle(workbook, Color.PINK);
        XSSFCellStyle orangeStyle = createHeaderStyle(workbook, Color.ORANGE);
        XSSFCellStyle thickBlueBorderStyle = createThickBlueBorderStyle(workbook);

        // Pillar spans 2 rows and 2 columns
        sheet.addMergedRegion(new CellRangeAddress(0, 1, 0, 1));
        Cell pillarCell = row0.createCell(0);
        pillarCell.setCellValue("Pillar");
        pillarCell.setCellStyle(greenStyle);

        // APM spans 2 rows and 3 columns
        sheet.addMergedRegion(new CellRangeAddress(0, 1, 2, 4));
        Cell apmCell = row0.createCell(2);
        apmCell.setCellValue("APM");
        apmCell.setCellStyle(pinkStyle);

        // APPLOG spans 2 rows and 3 columns
        sheet.addMergedRegion(new CellRangeAddress(0, 1, 5, 7));
        Cell appLogCell = row0.createCell(5);
        appLogCell.setCellValue("APPLOG");
        appLogCell.setCellStyle(orangeStyle);

        // Apply thick blue borders only after specific columns
        applySelectiveBlueBorders(sheet, thickBlueBorderStyle);

        // Write output to file
        try (FileOutputStream fileOut = new FileOutputStream("styled_output.xlsx")) {
            workbook.write(fileOut);
        }
        workbook.close();
    }

    // Create header style with background color
    private static XSSFCellStyle createHeaderStyle(XSSFWorkbook workbook, Color color) {
        XSSFCellStyle style = workbook.createCellStyle();
        style.setFillForegroundColor(new XSSFColor(color, null));
        style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        style.setAlignment(HorizontalAlignment.CENTER);
        style.setVerticalAlignment(VerticalAlignment.CENTER);
        return style;
    }

    // Create thick blue border style
    private static XSSFCellStyle createThickBlueBorderStyle(XSSFWorkbook workbook) {
        XSSFCellStyle style = workbook.createCellStyle();
        style.setBorderRight(BorderStyle.THICK);
        style.setRightBorderColor(IndexedColors.BLUE.getIndex());
        return style;
    }

    // Apply selective thick blue borders after specific sections
    private static void applySelectiveBlueBorders(Sheet sheet, CellStyle thickBlueBorderStyle) {
        int[][] borderPositions = {
                {0, 1}, // After Pillar (column 1)
                {4, 4}, // After APM (column 4)
                {7, 7}  // After APPLOG (column 7)
        };

        for (int[] position : borderPositions) {
            applyBlueBorder(sheet, 0, 1, position[0], position[1], thickBlueBorderStyle);
        }
    }

    // Apply blue border to a merged region
    private static void applyBlueBorder(Sheet sheet, int firstRow, int lastRow, int firstCol, int lastCol, CellStyle borderStyle) {
        for (int row = firstRow; row <= lastRow; row++) {
            Row currentRow = sheet.getRow(row);
            for (int col = firstCol; col <= lastCol; col++) {
                Cell cell = currentRow.getCell(col);
                if (cell == null) {
                    cell = currentRow.createCell(col);
                }
                cell.setCellStyle(borderStyle);
            }
        }
    }
}
